<?xml version="1.0" encoding="utf-8"?>
<saw:report xmlns:saw="com.siebel.analytics.web/report/v1.1" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlVersion="201201160" xmlns:sawx="com.siebel.analytics.web/expression/v1.1"><saw:criteria xsi:type="saw:simpleCriteria" subjectArea="&quot;X - Airlines Delay&quot;" withinHierarchy="true"><saw:columns><saw:column xsi:type="saw:regularColumn" columnID="c74a4bc41084ba1f0"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">&quot;Destination&quot;.&quot;Dest Airport&quot;</sawx:expr></saw:columnFormula><saw:tableHeading><saw:caption fmt="text"><saw:text>Destination</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:caption fmt="text"><saw:text>Airport Code</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="ca8115943b69ba612"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">SUBSTRING(&quot;Destination&quot;.&quot;Dest US State Name&quot; FROM 5)</sawx:expr></saw:columnFormula><saw:tableHeading><saw:caption fmt="text"><saw:text>Destination</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:caption fmt="text"><saw:text>State</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c55629c04e6f6d9d4"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">SUBSTRING(&quot;Destination&quot;.&quot;Dest Airport Name&quot; FROM 7)</sawx:expr></saw:columnFormula><saw:tableHeading><saw:caption fmt="text"><saw:text>Destination</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:caption fmt="text"><saw:text>Airport Name</saw:text></saw:caption></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="cf4e6239d609985fc"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">&quot;Destination&quot;.&quot;Dest Airport Lat&quot;</sawx:expr></saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="true"><saw:dataFormat xsi:type="saw:number" minDigits="6" maxDigits="6" commas="false" negativeType="minus"/></saw:formatSpec></saw:displayFormat><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c03631745e775a6f5"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">&quot;Destination&quot;.&quot;Dest Airport Long&quot;</sawx:expr></saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="true"><saw:dataFormat xsi:type="saw:number" minDigits="6" maxDigits="6" commas="false" negativeType="minus"/></saw:formatSpec></saw:displayFormat><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="c177162d943092884"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">&quot;Flight Facts&quot;.&quot;# of Flights&quot;</sawx:expr></saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="true"><saw:dataFormat xsi:type="saw:number" minDigits="0" maxDigits="0" commas="false" negativeType="minus"/></saw:formatSpec></saw:displayFormat><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:columnHeading></saw:column><saw:column xsi:type="saw:regularColumn" columnID="ce8a79559118eaafc"><saw:columnFormula><sawx:expr xsi:type="sawx:sqlExpression">&quot;Delay Facts&quot;.&quot;Delay Perf % (0=Ontime,  &gt;0=Late)&quot;</sawx:expr></saw:columnFormula><saw:displayFormat><saw:formatSpec suppress="repeat" wrapText="true"><saw:dataFormat xsi:type="saw:number" minDigits="2" maxDigits="2" commas="false" negativeType="minus"/></saw:formatSpec></saw:displayFormat><saw:tableHeading><saw:caption fmt="text"><saw:text>Delay Facts</saw:text></saw:caption></saw:tableHeading><saw:columnHeading><saw:displayFormat><saw:formatSpec/></saw:displayFormat><saw:caption fmt="text"><saw:text>Delay Perf %</saw:text></saw:caption></saw:columnHeading></saw:column></saw:columns><saw:filter><sawx:expr xsi:type="sawx:logical" op="and"><sawx:expr xsi:type="sawx:comparison" op="equal"><sawx:expr xsi:type="sawx:sqlExpression">&quot;Date&quot;.&quot;Dep Year&quot;</sawx:expr><sawx:expr xsi:type="xsd:string">2010</sawx:expr></sawx:expr><sawx:expr xsi:type="sawx:special" op="prompted"><sawx:expr xsi:type="sawx:sqlExpression">&quot;Destination&quot;.&quot;Dest Region Name&quot;</sawx:expr></sawx:expr></sawx:expr></saw:filter></saw:criteria><saw:views currentView="0"><saw:view xsi:type="saw:compoundView" name="compoundView!1"><saw:cvTable><saw:cvRow><saw:cvCell viewName="narrativeView!1" rowSpan="2"><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:cvCell><saw:cvCell viewName="tableView!1"><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:cvCell></saw:cvRow><saw:cvRow><saw:cvCell viewName="dvtchart!1"><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:cvCell></saw:cvRow></saw:cvTable></saw:view><saw:view xsi:type="saw:titleView" name="titleView!1"/><saw:view xsi:type="saw:tableView" name="tableView!1" scrollingEnabled="true" height="280"><saw:edges><saw:edge axis="page" showColumnHeader="true"/><saw:edge axis="section"/><saw:edge axis="row" showColumnHeader="true"><saw:columnOrder><saw:columnOrderRef columnID="c177162d943092884" direction="descending"/></saw:columnOrder><saw:edgeLayers><saw:edgeLayer type="column" columnID="ca8115943b69ba612"/><saw:edgeLayer type="column" columnID="c177162d943092884"><saw:memberFormat><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:memberFormat></saw:edgeLayer><saw:edgeLayer type="column" columnID="ce8a79559118eaafc"><saw:memberFormat><saw:displayFormat><saw:formatSpec/></saw:displayFormat></saw:memberFormat></saw:edgeLayer></saw:edgeLayers></saw:edge><saw:edge axis="column" showColumnHeader="rollover"/></saw:edges></saw:view><saw:view xsi:type="saw:narrativeView" name="narrativeView!1"><saw:narrative rowCount="1000"><saw:caption fmt="html"><saw:text>[&quot;@{c74a4bc41084ba1f0}&quot;,&quot;@{ca8115943b69ba612}&quot;,&quot;@{c55629c04e6f6d9d4}&quot;,@{cf4e6239d609985fc},@{c03631745e775a6f5},@{c177162d943092884},@{ce8a79559118eaafc}]</saw:text></saw:caption></saw:narrative><saw:rowSep><saw:caption fmt="html"><saw:text>,</saw:text></saw:caption></saw:rowSep><saw:prefix><saw:caption fmt="html"><saw:text>&lt;DIV id=map style=&quot;width:800px;height:600px;padding:10px;&quot;&gt;&lt;/DIV&gt;
&lt;span id=&quot;_text&quot;&gt;Nearest airport: &lt;/span&gt;
&lt;script language=&#39;JavaScript&#39; src=&#39;/mapviewer/jslib/v2/oraclemapsv2.js&#39;&gt;&lt;/script&gt;

&lt;script language=&quot;JavaScript&quot; type=&quot;text/javascript&quot;&gt;
 function loadConnectionsData()
      {
        $.getJSON(&#39;saw.dll?downloadfile&amp;Path=/shared/04. Maps and Spatial/HTML5 JSAPI/Connections/connections.json&#39;, function(data) {          
            connectionsData = [];
            $.each(data, function(key, val){connectionsData = val;});
            if(console)
              console.log(&quot;connections data loaded.&quot;);
        });
      }

      /**
       * Finds the nearest airport from the mouse pointer, and displays all
       * the outbound connections.
       */
      function onMouseMove(evt)
      {
        var x = map.getCursorLocation().getX();
        var y = map.getCursorLocation().getY();
        var nearestAp = null, minDist = -1;
        //get all airports locations currently displayed
        var features = airportsLayer.getAllFeatures(), geom = null;
        if(!features || features.length==0)
          return;

        var len = features.length;
        var fx, fy, dist;
        for(var i=0; i&lt;len; i++)
        {
          geom = features[i].getGeometry();
          fx = geom.getX();
          fy = geom.getY();
          dist = (x-fx)*(x-fx) + (y-fy)*(y-fy);
          if(minDist&lt;0 || minDist &gt; dist)
          {
            minDist = dist;
            nearestAp = features[i];
          }
        }
        displayOutboundConnections(nearestAp);
      }
      
      /**
       * this function animates the nearest airport, and all the
       * direct connection lines to its destinations.
       */
      function displayOutboundConnections(newNearest)
      {
        //same nearest airport; do nothing
        if(nearestAirport!=null &amp;&amp; nearestAirport == newNearest)
          return;
        
        nearestAirport = newNearest;
        airportsLayer.selectFeature(nearestAirport);
        
        //remove currently displayed connections
        if(connectionsLayer)
          map.removeLayer(connectionsLayer);
        
        if(!connectionsData)
        {  
          return;
        }
          
        var ox = nearestAirport.getGeometry().getX(), 
            oy = nearestAirport.getGeometry().getY();
            
        connectionsLayer = new OM.layer.VectorLayer(&quot;connections&quot;,{def:{type:OM.layer.VectorLayer.TYPE_LOCAL}});
        var lineStyle = new OM.style.Line({strokeThickness:1, stroke:&quot;#808080&quot;});
        
        var dests = findDestinations(nearestAirport);
        
        document.getElementById(&quot;_text&quot;).innerHTML= &quot;Airport:  &lt;b&gt;&quot;+  nearestAirport.getAttributes()[&quot;AIRPORT&quot;] +&quot;&lt;/b&gt;, Outbound direct flights: &quot;+ dests.length;

        for (var i=0; i&lt;dests.length; i++)
        {
          var ap = airportsLayer.getFeature(dests[i]);
          if (!ap)
            continue;
          var dx = ap.getGeometry().getX(),
              dy = ap.getGeometry().getY();
		 
		  var oPoint = new OM.geometry.Point(ox,oy,3857);
		  var dPoint = new OM.geometry.Point(dx,dy,3857);
			  
          var oPoint_8307 = oPoint.transform(8307);
		  var dPoint_8307 = dPoint.transform(8307);
          	  
		  var line = OM.util.GeomUtil.createGreatCircle(oPoint_8307,dPoint_8307);
		 
          var lineFeature = new OM.Feature(&quot;to: &quot;+dests[i], line,{renderingStyle:lineStyle}); 
          connectionsLayer.addFeature(lineFeature);
        }
        
        map.addLayer(connectionsLayer);
      }
      
      //given the name of the Origin airport, find all airports with direct
      //outbound connections
      function findDestinations(airport)
      {
        var code = airport.id; //id attribute is automatically populated to be the keyColumn specified in the layer definition.
        var destinations = [], len = connectionsData.length, item;
        
        for(var i=0; i&lt;len; i++)
        {
          item = connectionsData[i];
          if(item.origin === code)
            destinations.push(item.destination);
        }
        console.log(&quot;found connections: &quot;+ destinations.length);
        return destinations;
      }
      
  function setupAirportStyles(layer)
  {
    var circles = [];
	//var fillColors = [&#39;#34CA16&#39;,&#39;#79C636&#39;,&#39;#EAF167&#39;,&#39;#E9E753&#39;,&#39;#F9B975&#39;,&#39;#E6A23C&#39;,&#39;#EB8075&#39;,&#39;#FA5E5E&#39;,&#39;#EB1919&#39;,&#39;#B32205&#39;];
    for(var i=0; i&lt;10; i++)
    {
      circles[i] =  new OM.style.Marker({
        vectorDef : [{
            shape: { type:&quot;circle&quot;, cx:5, cy:5, width:10, height:10 }, 
            style: {
              fill:&quot;#AFB6BD&quot;, 
              stroke:&quot;#6784A3&quot;
            }
          }],
        width: 7 + i*3,
        height:7 + i*3
      });
    }
    
    var bucketStyle = new OM.style.BucketStyle(
    {
      styles: circles,
      numClasses:10, 
      classification:&#39;equal&#39;,  //creates equal-ranged buckets
      defaultStyle: circles[0]
    });

    layer.setRenderingStyle(bucketStyle, [&quot;#FLIGHTS&quot;]);
  }      

var tempStr= &#39;</saw:text></saw:caption></saw:prefix><saw:postfix><saw:caption fmt="html"><saw:text>&#39;;
var darray=eval(&#39;[&#39;+tempStr+&#39;]&#39;);
var map = null;
var airportsLayer = null;
var connectionsLayer = null;
var nearestAirport = null;
var nearestFeature = null;
var connectionsData = null;
var baseURL  = &quot;http://&quot;+document.location.host+&quot;/mapviewer&quot;;
var center = new OM.geometry.Point(-100,40,8307); 
map = new OM.Map(document.getElementById(&#39;map&#39;),{mapviewerURL: baseURL}) ;

loadConnectionsData();
map.addListener(OM.event.MouseEvent.MOUSE_MOVE, onMouseMove);

var tilelayer = new OM.layer.ElocationTileLayer(&quot;oracle.maps&quot;);
map.addLayer(tilelayer) ;  

var states = new OM.layer.VectorLayer(&quot;states&quot;, {
def:{
	type:OM.layer.VectorLayer.TYPE_PREDEFINED,
	dataSource:&quot;mvdemo&quot;,
	theme:&quot;theme_demo_states&quot;
}
});
map.addLayer(states);

airportsLayer = new OM.layer.VectorLayer(&quot;airports&quot;, 
{
def:{
	type:OM.layer.VectorLayer.TYPE_LOCAL		
}
});   

/*&quot;Code&quot;,&quot;State&quot;,&quot;Airport&quot;,&quot;Lat&quot;,&quot;Long&quot;,&quot;# Flights&quot;,&quot;Delay Mins&quot;*/
for (i=0;i&lt;darray.length; i++){
		var fid = darray[i][0];
		var mpoint = new OM.geometry.Point(darray[i][4], darray[i][3],8307);
		var f_attr = {attributes :{&quot;AIRPORT&quot;:darray[i][2], &quot;STATE&quot;:darray[i][1], &quot;#FLIGHTS&quot;:darray[i][5], &quot;DELAY&quot;:darray[i][6]}};
		var feature = new OM.Feature(fid,mpoint,f_attr);  
		airportsLayer.addFeature(feature);
	}

airportsLayer.setLabelsVisible(false);
airportsLayer.setBringToTopOnMouseOver(false);
setupAirportStyles(airportsLayer);
var pulse = new OM.style.PulseAnimation({
	stroke: &quot;#336699&quot;,
	duration: 1,
	beginSize: 8,
	endSize: 50,
	repeatCount:3
});
airportsLayer.enableFeatureSelection(true);
airportsLayer.setSelectStyle(pulse);
map.addLayer(airportsLayer) ;
map.setMapCenter( center );
map.setMapZoomLevel(3) ;
map.init() ;

&lt;/script&gt;</saw:text></saw:caption></saw:postfix></saw:view><saw:view xsi:type="saw:dvtchart" name="dvtchart!1" autoPreview="true"><saw:display type="bar" subtype="horizontal" renderFormat="default" mode="online" animateOnDisplay="false"><saw:style barStyle="rectangle" lineStyle="default" scatterStyle="default" fillStyle="default" bubblePercentSize="100" effect="2d"/></saw:display><saw:canvasFormat height="280" width="400"><saw:dataLabels display="default" label="default" position="below" transparentBackground="true" valueAs="default"/><saw:title mode="custom"><saw:caption><saw:text/></saw:caption></saw:title></saw:canvasFormat><saw:selections><saw:categories><saw:category><saw:columnRef columnID="c55629c04e6f6d9d4"/></saw:category></saw:categories><saw:measures showMeasureLabelsOnCategory="false"><saw:column measureType="x"><saw:columnRef columnID="ce8a79559118eaafc"/></saw:column></saw:measures><saw:seriesGenerators><saw:measureLabels/></saw:seriesGenerators><saw:page><saw:column><saw:columnRef columnID="ca8115943b69ba612"/></saw:column></saw:page><saw:sections/></saw:selections><saw:legendFormat position="default" transparentFill="true"/><saw:axesFormats><saw:axisFormat axis="Y1" displayScaleLabels="true"><saw:labels rotate="0" rotateLabels="false" stagger="false" abbreviation="default" skipLabels="true"><saw:dataFormat xsi:type="saw:percent" commas="false" negativeType="minus" minDigits="0" maxDigits="0"/></saw:labels><saw:textFormat/><saw:title mode="custom"/></saw:axisFormat><saw:axisFormat axis="X"><saw:title mode="custom"><saw:caption><saw:text>Delay Performance</saw:text></saw:caption></saw:title></saw:axisFormat></saw:axesFormats></saw:view></saw:views></saw:report>
