<?xml version="1.0" encoding="utf-8"?>
<sawd:dashboardPage xmlns:sawd="com.siebel.analytics.web/dashboard/v1.1" xmlns:saw="com.siebel.analytics.web/report/v1.1" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlVersion="200810300" isEmpty="false" duid="tevq6bhf8mhedq1m"><sawd:dashboardColumn name="Column 2" frozen="false" canFreeze="true" duid="68o5m70k1lsusma8" layoutType="bestFit"><sawd:dashboardSection name="Section 2" duid="8bv4aun7up81lqld" showSectionTitle="true" collapsible="true" showHeading="false" layoutType="bestFit">
			<saw:caption captionID="kcap12832459_2462">
				<saw:text>Page Information (click to collapse or expand)</saw:text>
			</saw:caption>
			<saw:displayFormat>
				<saw:formatSpec borderPosition="all" paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0" wrapText="true" backgroundColor="#F9F9F4" borderColor="#EEEEEE"/>
			</saw:displayFormat>
			<sawd:sectionHeading>
				<saw:displayFormat>
					<saw:formatSpec fontColor="#666699" wrapText="true" fontStyle="italic" fontSize="12" fontFamily="Arial"/>
				</saw:displayFormat>
			</sawd:sectionHeading>
			
		<sawd:htmlView name="HTML 2" duid="0oaouic28aft8dk3">
				<sawd:HTML fmt="html" captionID="kcap12832459_2467">&lt;font style=&quot;font:12px arial&quot;&gt; &lt;img src=&quot;res/sk_blafp/common/rightarrow.gif&quot; /&gt;
&lt;b&gt; Description :&lt;/b&gt; This is an example on how to use ore.indexApply() function in an ORE script. The ore.indexApply function executes the specified user-defined input function using data that is generated by the input function. [br/]
It supports task-parallel execution, in which one or more R engines perform the same or different calculations, or task. The times argument to the ore.indexApply function specifies the number of times that the input function executes[br/]
 in the database. 
[br/][br/]
The syntax of the ore.indexApply function is the following:[br/]
ore.indexApply(times, FUN, ..., FUN.VALUE = NULL, FUN.NAME = NULL, parallel = getOption(&quot;ore.parallel&quot;, NULL))
&lt;/font&gt;</sawd:HTML>
			</sawd:htmlView></sawd:dashboardSection></sawd:dashboardColumn><sawd:dashboardColumn name="Column 1" canFreeze="false" duid="7m6qn254nucu9jv8" layoutType="bestFit" break="column" frozen="false"><sawd:dashboardSection layoutType="bestFit" name="Section 1" collapsible="false" duid="6hsn9ba8s98i4v2p" showSectionTitle="false"><saw:displayFormat><saw:formatSpec borderPosition="4" wrapText="true" borderColor="#999999" paddingRight="6"/></saw:displayFormat><sawd:htmlView name="HTML 0" duid="mdrtoncb213lmmnm"><sawd:HTML fmt="html">&lt;pre&gt;
############################################
## Simulation of random normal distribution
## ore.indexApply
############################################
library(ORE)
ore.connect(user=&quot;rquser&quot;,host=&quot;localhost&quot;,password=&quot;rquser&quot;,service_name=&quot;pdborcl&quot;,all=TRUE)

# Define function the compute summary statistics for n random numbers
simulation &lt;- function(index, n) {
  set.seed(index)
  x &lt;- rnorm(n)
  res &lt;- data.frame(t(matrix(summary(x))))
  names(res) &lt;- c(&quot;min&quot;,&quot;q1&quot;,&quot;median&quot;,&quot;mean&quot;,&quot;q3&quot;,&quot;max&quot;)
  res$id &lt;- index
  res
}

# Execute function as a test and to get structure of result

(res &lt;- simulation(1,1000))

# Try a simulation with 1000 numbers and 10 simulations in parallel

stats &lt;- ore.pull(ore.indexApply(10, simulation, n=1000, 
                                 FUN.VALUE=res[1,], parallel=4, ore.graphics=FALSE))
stats

# Visualize the results
library(reshape)
melt.stats &lt;- melt(stats, id.vars=&quot;id&quot;)  # morph data into appropriate format
boxplot(value~variable, data=melt.stats, 
        main=&quot;Distribution of Stats - sample 1000, 10 trials&quot;)
&lt;/pre&gt;</sawd:HTML></sawd:htmlView></sawd:dashboardSection></sawd:dashboardColumn><sawd:dashboardColumn name="Column 0" frozen="false" canFreeze="false" duid="vndhm2uepn3don0e" layoutType="bestFit"><sawd:dashboardSection layoutType="bestFit" name="Section 0" collapsible="false" duid="1aoqj00155v01429" showSectionTitle="false"><saw:displayFormat><saw:formatSpec borderPosition="none" wrapText="true" paddingLeft="6"/></saw:displayFormat><sawd:htmlView name="HTML 1" duid="kroa10bdruq03o9d"><sawd:HTML fmt="html">&lt;pre&gt;


# In a loop, perform 100 trials for random vector of 10, 100, 1000, 10000, 100000 elements

num.trials &lt;- 1000
for(n in 10^(1:4)){
  t1 &lt;- system.time(stats &lt;- ore.pull(ore.indexApply(num.trials, simulation, n=n,
                            FUN.VALUE=res[1,], parallel=4, ore.graphics=FALSE)))[3]
  cat(&quot;n=&quot;,n,&quot;, time=&quot;,t1,&quot;\n&quot;)
  melt.stats &lt;- melt(stats, id.vars=&quot;id&quot;)
  boxplot(value~variable, data=melt.stats, 
          main=paste(&quot;Distribution of Stats - sample&quot;,n,&quot;,&quot;, num.trials, &quot;trials&quot;))
  gc()
}



&lt;/pre&gt;</sawd:HTML></sawd:htmlView></sawd:dashboardSection></sawd:dashboardColumn></sawd:dashboardPage>