<?xml version = '1.0' encoding = 'utf-8'?>
<!--Generated by Oracle BI Publisher 10.1.3.4. -->
<xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:ora="http://www.oracle.com/XSL/Transform/java/" xmlns:xdofo="http://xmlns.oracle.com/oxp/fo/extensions" xmlns:xdoxslt="http://www.oracle.com/XSL/Transform/java/oracle.xdo.template.rtf.XSLTFunctions" xmlns:xdoxliff="urn:oasis:names:tc:xliff:document:1.1" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:OutBoundPayments="http://xmlns.oracle.com/iby/EFTTemplateSample" xmlns:General="http://xmlns.oracle.com/iby" xmlns:Address="http://xmlns.oracle.com/iby/address" xmlns:PaymentsCommon="http://xmlns.oracle.com/iby/PaymentsCommon" xmlns:xdoeft="http://xmlns.oracle.com/iby/xdoeft">
   <xsl:output method="text" encoding="iso-8859-1"/>
   <xsl:param name="_XDOCTX">#</xsl:param>
   <xsl:decimal-format name="_DECIMALFORMAT" grouping-separator="," decimal-separator="."/>
   <xsl:variable name="PAGE_LINE_NUMBER" select="55"/>
   <xsl:template match="/">
      <!--Startup: Init Record Counter -->
      <xsl:call-template name="_RECORDCOUNTER"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'PAGE_NUMBER', number(0))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE', string(''))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGETEMPLATES', string(''))"/>
      <!--Definition: CH101Se -->
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('CH101Seq'), number(1), number(999999), number(1), number(1))"/>
      <!--Control: ================ Start new level: CH101================ -->
      <xsl:call-template name="HEADER"/>
      <!--Control: ================ Start new level: G1================ -->
      <xsl:call-template name="SUB-HEADER"/>
      <!--Control: ================ Start new level: G2================ -->
      <xsl:for-each select=".//G1" >
      <!--<xsl:for-each-group select=".//G1" group-by="COD_PROD">-->
      <xsl:for-each-group select=".//G2" group-by="COD_ACCT_NO"><xsl:sort select="COD_ACCT_NO"/>
      <xsl:for-each select="current-group()" xdoeft:type="LEVEL" xdoeft:level-name="G2">
         <xsl:value-of select="xdoxslt:reset_sequence_number($_XDOCTX, 'CH101Seq')"/>
         <!--Control: Reset sequence number 'CH101Seq', level: G1_ -->
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'varHDR',  string('FALSE'))"/>
         <xsl:if test="xdoxslt:get_variable($_XDOCTX, 'LINE_NUMBER') &gt; $PAGE_LINE_NUMBER">
           <xsl:call-template name="HEADER"/>
           <xsl:call-template name="SUB-HEADER"/>
           <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'varHDR',  string('TRUE'))"/>
         </xsl:if>
         <xsl:if test="xdoxslt:get_variable($_XDOCTX, 'varHDR')=string('FALSE') and xdoxslt:get_variable($_XDOCTX, 'GRP_START')=string('TRUE')">
	  <xsl:value-of select="xdoxslt:chr(12)"/>
           <xsl:call-template name="HEADER"/>
           <xsl:call-template name="SUB-HEADER"/>
	   <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'GRP_START',  string('FALSE'))"/>
         </xsl:if>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L',  number(0))"/>
 
	 <!--Control: ===== START RECORD: G1 ==== -->
         <!--Render: -->
         <xsl:call-template name="COD_ACCT_NO"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'COD_ACCT_NO')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'COD_ACCT_NO'))"/>
 
         <xsl:call-template name="L1R8P17L5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R8P17L5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'L1R8P17L5'))"/>
 
         <xsl:call-template name="COD_ACCT_TITLE"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'COD_ACCT_TITLE')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'COD_ACCT_TITLE'))"/>
 
         <xsl:call-template name="L1R8P29L5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R8P29L5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'L1R8P29L5'))"/>
 
         <xsl:call-template name="COD_ACCT_STAT"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'COD_ACCT_STAT')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'COD_ACCT_STAT'))"/>

         <xsl:call-template name="L1R8P38L5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R8P38L5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'L1R8P38L5'))"/>

         <xsl:call-template name="COD_TXN_MNEMONIC"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'COD_TXN_MNEMONIC')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'COD_TXN_MNEMONIC'))"/>

         <xsl:call-template name="L1R8P47L5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R8P47L5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'L1R8P47L5'))"/>


         <xsl:call-template name="TXT_TXN_DESC"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'TXT_TXN_DESC')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'TXT_TXN_DESC'))"/>

         <xsl:call-template name="L1R8P68L5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R8P68L5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'L1R8P68L5'))"/>

         <xsl:call-template name="COD_DRCR"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'COD_DRCR')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'COD_DRCR'))"/>
         <xsl:call-template name="L1R8P89L5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R8P89L5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'L1R8P89L5'))"/>

         <xsl:call-template name="AMT_SC"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8L', number(xdoxslt:get_variable($_XDOCTX, 'L1R8L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'AMT_SC')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8', xdoxslt:get_variable($_XDOCTX, 'AMT_SC'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R8')"/>

         <!--Control: ===== END RECORD: G1 ==== -->
         <!--Control: ===== Record Break ==== -->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>

         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8b',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8Lb',  number(0))"/>
	
      <xsl:call-template name="COD_CC_BRN_TXN"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8Lb', number(xdoxslt:get_variable($_XDOCTX, 'L1R8Lb')) + string-length(xdoxslt:get_variable($_XDOCTX, 'COD_CC_BRN_TXN')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8b', xdoxslt:get_variable($_XDOCTX, 'COD_CC_BRN_TXN'))"/>

      <xsl:call-template name="space1b"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8Lb', number(xdoxslt:get_variable($_XDOCTX, 'L1R8Lb')) + string-length(xdoxslt:get_variable($_XDOCTX, 'space1b')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8b', xdoxslt:get_variable($_XDOCTX, 'space1b'))"/>
 
      <xsl:call-template name="CTR_BATCH_NO"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8Lb', number(xdoxslt:get_variable($_XDOCTX, 'L1R8Lb')) + string-length(xdoxslt:get_variable($_XDOCTX, 'CTR_BATCH_NO')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R8b', xdoxslt:get_variable($_XDOCTX, 'CTR_BATCH_NO'))"/>
	
	 <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R8b')"/>
 

	 <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>

	 <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>

      </xsl:for-each>

      </xsl:for-each-group>
      <xsl:call-template name="GRP-FOOTER"/>
</xsl:for-each>
      <!--Control: ================ Start new level: G1================       -->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'MESSAGE1', xdoxslt:removeAll(string(xdoxslt:get_variable($_XDOCTX, 'MESSAGETEMPLATES')), string(xdoxslt:get_variable($_XDOCTX, 'MESSAGE'))))"/>
      <xsl:variable name="MESSAGELENGTH" select="string-length(xdoxslt:get_variable($_XDOCTX, 'MESSAGE1'))"/>
      <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'MESSAGE')"/>
   </xsl:template>
   <xsl:template name="_RECORDCOUNTER">
      <!--Record Counter Ini -->
      <!--Definition: CH101_R -->
      <xsl:call-template name="SEQ_START_CH101_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('CH101_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_CH101_RC_V'), number(1))"/>
      <!--Definition: G1_R -->
      <xsl:call-template name="SEQ_START_G1_RC"/>
      <xsl:value-of select="xdoxslt:create_sequence_number($_XDOCTX, string('G1_RC'), number(1), number(999999), xdoxslt:get_variable($_XDOCTX, 'SEQ_START_G1_RC_V'), number(1))"/>
   </xsl:template>
   <xsl:template name="SEQ_START_CH101_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression:  -->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_CH101_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R1P1L110">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad(('_'),110,'_' -->
      <xsl:variable name="v1" select="xdoxslt:rpad(string('_'),number(110),string('_'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1P1L110', substring($v1,1,110))"/>
   </xsl:template>
   <xsl:template name="lbl_hdr_bank">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Bank  :')),'NONE')),12,' ' -->
      <xsl:variable name="v2" select="string('Bank  :')"/>
      <xsl:variable name="v3" select="xdoxslt:convert_case(string($v2), string('NONE'))"/>
      <xsl:variable name="v4" select="xdoxslt:rpad(string($v3),number(12),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'lbl_hdr_bank', substring($v4,1,12))"/>
   </xsl:template>
   <xsl:template name="data_hdr_bank">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: lpad((TO_NUMBER((P_COD_BANK))),2,'0' -->
      <xsl:variable name="v5" select="number(xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, ancestor-or-self::CH101/P_COD_BANK)))"/>
      <xsl:variable name="v6" select="xdoxslt:lpad(string($v5),number(2),string('0'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'data_hdr_bank', substring($v6,1,2))"/>
   </xsl:template>
   <xsl:template name="L1R2P15L6">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),6,' ' -->
      <xsl:variable name="v7" select="xdoxslt:rpad(string(' '),number(6),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P15L6', substring($v7,1,6))"/>
   </xsl:template>
   <xsl:template name="L1R2P21L28">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR((P_NAM_BANK)),'NONE')),28,' ' -->
      <xsl:variable name="v8" select="string(xdoxslt:normalize_string($_XDOCTX, ancestor-or-self::CH101/P_NAM_BANK))"/>
      <xsl:variable name="v9" select="xdoxslt:convert_case(string($v8), string('NONE'))"/>
      <xsl:variable name="v10" select="xdoxslt:rpad(string($v9),number(28),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P21L28', substring($v10,1,28))"/>
   </xsl:template>
   <xsl:template name="L1R2P49L5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),15,' ' -->
      <xsl:variable name="v11" select="xdoxslt:rpad(string(' '),number(15),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P49L5', substring($v11,1,15))"/>
   </xsl:template>
   <xsl:template name="L1R2P54L8">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('FLEXCUBE')),'NONE')),8,' ' -->
      <xsl:variable name="v12" select="string('FLEXCUBE')"/>
      <xsl:variable name="v13" select="xdoxslt:convert_case(string($v12), string('NONE'))"/>
      <xsl:variable name="v14" select="xdoxslt:rpad(string($v13),number(8),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P54L8', substring($v14,1,8))"/>
   </xsl:template>
   <xsl:template name="L1R2P62L20">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),20,' ' -->
      <xsl:variable name="v15" select="xdoxslt:rpad(string(' '),number(20),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P62L20', substring($v15,1,20))"/>
   </xsl:template>
   <xsl:template name="L1R2P82L12">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Run Date :')),'NONE')),12,' ' -->
      <xsl:variable name="v16" select="string('Run Date :')"/>
      <xsl:variable name="v17" select="xdoxslt:convert_case(string($v16), string('NONE'))"/>
      <xsl:variable name="v18" select="xdoxslt:rpad(string($v17),number(12),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P82L12', substring($v18,1,12))"/>
   </xsl:template>
   <xsl:template name="L1R2P94L11">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((FORMAT_DATE((SYSDATE), 'DD-MON-YYYY','DEC')),11,' ' -->
      <xsl:variable name="v19" select="xdoxslt:sysdate_as_xsdformat()"/>
      <xsl:variable name="v20" select="xdoxslt:ora_format_date(string($v19), string('DD-MON-YYYY'), string('DEC'))"/>
      <xsl:variable name="v21" select="xdoxslt:rpad(string($v20),number(11),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2P94L11', substring($v21,1,11))"/>
   </xsl:template>
   <xsl:template name="lbl_hdr_branch">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Branch :')),'NONE')),12,' ' -->
      <xsl:variable name="v22" select="string('Branch :')"/>
      <xsl:variable name="v23" select="xdoxslt:convert_case(string($v22), string('NONE'))"/>
      <xsl:variable name="v24" select="xdoxslt:rpad(string($v23),number(12),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'lbl_hdr_branch', substring($v24,1,12))"/>
   </xsl:template>
   <xsl:template name="data_hdr_branch">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: lpad((TO_NUMBER((P_COD_BRANCH))),4,'0' -->
      <xsl:variable name="v25" select="number(xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, ancestor-or-self::CH101/P_COD_BRANCH)))"/>
      <xsl:variable name="v26" select="xdoxslt:lpad(string($v25),number(4),string('0'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'data_hdr_branch', substring($v26,1,4))"/>
   </xsl:template>
   <xsl:template name="L1R3P17L5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v27" select="xdoxslt:rpad(string(' '),number(5),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P17L5', substring($v27,1,5))"/>
   </xsl:template>
   <xsl:template name="data_hdr_branchname">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR((P_NAM_BRANCH)),'NONE')),20,' ' -->
      <xsl:variable name="v28" select="string(xdoxslt:normalize_string($_XDOCTX, ancestor-or-self::CH101/P_NAM_BRANCH))"/>
      <xsl:variable name="v29" select="xdoxslt:convert_case(string($v28), string('NONE'))"/>
      <xsl:variable name="v30" select="xdoxslt:rpad(string($v29),number(20),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'data_hdr_branchname', substring($v30,1,20))"/>
   </xsl:template>
   <xsl:template name="L1R3P42L8">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),18,' ' -->
      <xsl:variable name="v31" select="xdoxslt:rpad(string(' '),number(18),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P42L8', substring($v31,1,18))"/>
   </xsl:template>
   <xsl:template name="lbl_hdr_reporttitle">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('SAVINGS & CHEQUING')),'NONE')),23,' ' -->
      <xsl:variable name="v32" select="string('SAVINGS - CHEQUING')"/>
      <xsl:variable name="v33" select="xdoxslt:convert_case(string($v32), string('NONE'))"/>
      <xsl:variable name="v34" select="xdoxslt:rpad(string($v33),number(23),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'lbl_hdr_reporttitle', substring($v34,1,23))"/>
   </xsl:template>
   <xsl:template name="L1R3P73L11">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),11,' ' -->
      <xsl:variable name="v35" select="xdoxslt:rpad(string(' '),number(11),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P73L11', substring($v35,1,11))"/>
   </xsl:template>
   <xsl:template name="lbl_hdr_runtime">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Run Time:')),'NONE')),10,' ' -->
      <xsl:variable name="v36" select="string('Run Time:')"/>
      <xsl:variable name="v37" select="xdoxslt:convert_case(string($v36), string('NONE'))"/>
      <xsl:variable name="v38" select="xdoxslt:rpad(string($v37),number(10),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'lbl_hdr_runtime', substring($v38,1,10))"/>
   </xsl:template>
   <xsl:template name="L1R3P94L11">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((FORMAT_DATE((SYSDATE), 'HH:MM','DEC')),11,' ' -->
      <xsl:variable name="v39" select="xdoxslt:sysdate_as_xsdformat()"/>
      <xsl:variable name="v40" select="xdoxslt:ora_format_date(string($v39), string('HH:MM'), string('DEC'))"/>
      <xsl:variable name="v41" select="xdoxslt:rpad(string($v40),number(11),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3P94L11', substring($v41,1,11))"/>
   </xsl:template>
   <xsl:template name="L1R4P1L8">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Op. Id:')),'NONE')),8,' ' -->
      <xsl:variable name="v42" select="string('Op. Id:')"/>
      <xsl:variable name="v43" select="xdoxslt:convert_case(string($v42), string('NONE'))"/>
      <xsl:variable name="v44" select="xdoxslt:rpad(string($v43),number(8),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4P1L8', substring($v44,1,8))"/>
   </xsl:template>
   <xsl:template name="L1R4P9L20">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR((P_USER_ID)),'NONE')),20,' ' -->
      <xsl:variable name="v45" select="string(xdoxslt:normalize_string($_XDOCTX, ancestor-or-self::CH101/P_USER_ID))"/>
      <xsl:variable name="v46" select="xdoxslt:convert_case(string($v45), string('NONE'))"/>
      <xsl:variable name="v47" select="xdoxslt:rpad(string($v46),number(20),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4P9L20', substring($v47,1,20))"/>
   </xsl:template>
   <xsl:template name="L1R4P29L23">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),28,' ' -->
      <xsl:variable name="v48" select="xdoxslt:rpad(string(' '),number(28),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4P29L23', substring($v48,1,28))"/>
   </xsl:template>
   <xsl:template name="lbl_hdr_reporttitle2">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('POSTED TRANSACTIONS REPORT')),'NONE')),6,' ' -->
      <xsl:variable name="v49" select="string('POSTED TRANSACTIONS REPORT')"/>
      <xsl:variable name="v50" select="xdoxslt:convert_case(string($v49), string('NONE'))"/>
      <xsl:variable name="v51" select="xdoxslt:rpad(string($v50),number(26),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'lbl_hdr_reporttitle2', substring($v51,1,26))"/>
   </xsl:template>

   <xsl:template name="L1R4P69L15">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),15,' ' -->
      <xsl:variable name="v54" select="xdoxslt:rpad(string(' '),number(15),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4P69L15', substring($v54,1,15))"/>
   </xsl:template>
   <xsl:template name="L1R4P84L12">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Report No:')),'NONE')),12,' ' -->
      <xsl:variable name="v55" select="string('Report No:')"/>
      <xsl:variable name="v56" select="xdoxslt:convert_case(string($v55), string('NONE'))"/>
      <xsl:variable name="v57" select="xdoxslt:rpad(string($v56),number(12),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4P84L12', substring($v57,1,12))"/>
   </xsl:template>
   <xsl:template name="L1R4P96L8">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('CH101/1')),'NONE')),8,' ' -->
      <xsl:variable name="v58" select="concat(string('CH101/'), string(xdoxslt:get_variable($_XDOCTX, 'PAGE_NUMBER')))"/>
      <xsl:variable name="v59" select="xdoxslt:convert_case(string($v58), string('NONE'))"/>
      <xsl:variable name="v60" select="xdoxslt:rpad(string($v59),number(8),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4P96L8', substring($v60,1,8))"/>
   </xsl:template>

   <xsl:template name="lbl_hdr_spaceLine5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),60,' ' -->
      <xsl:variable name="v61a" select="xdoxslt:rpad(string(' '),number(60),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'lbl_hdr_spaceLine5', substring($v61a,1,60))"/>
   </xsl:template>
   <xsl:template name="lbl_hdr_for">
      <xsl:param name="index" select="string(position())"/>
      <xsl:variable name="v62a" select="string('For:')"/>
      <xsl:variable name="v63a" select="xdoxslt:convert_case(string($v62a), string('NONE'))"/>
      <xsl:variable name="v64a" select="xdoxslt:rpad(string($v63a),number(4),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'lbl_hdr_for', substring($v64a,1,4))"/>
   </xsl:template>
      <xsl:template name="lbl_hdr_spaceLine5b">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),3,' ' -->
      <xsl:variable name="v65a" select="xdoxslt:rpad(string(' '),number(3),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'bl_hdr_spaceLine5b', substring($v65a,1,3))"/>
   </xsl:template>
   <xsl:template name="data_hdr_for">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('CH101/1')),'NONE')),8,' ' -->

   </xsl:template>

   <xsl:template name="SEQ_START_G1_RC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression:  -->
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'SEQ_START_G1_RC_V', 0)"/>
   </xsl:template>
   <xsl:template name="L1R5P1L110">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad(('_'),110,'_' -->
      <xsl:variable name="v61" select="xdoxslt:rpad(string('_'),number(110),string('_'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5P1L110', substring($v61,1,110))"/>
   </xsl:template>
   <xsl:template name="column11">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Account No.')),'NONE')),16,' ' -->
      <xsl:variable name="v62" select="string('Account No.')"/>
      <xsl:variable name="v63" select="xdoxslt:convert_case(string($v62), string('NONE'))"/>
      <xsl:variable name="v64" select="xdoxslt:rpad(string($v63),number(16),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column11', substring($v64,1,16))"/>
   </xsl:template>
   <xsl:template name="space1">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v65" select="xdoxslt:rpad(string(' '),number(5),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'space1', substring($v65,1,5))"/>
   </xsl:template>
   <xsl:template name="column1">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Account Title')),'NONE')),7,' ' -->
      <xsl:variable name="v66" select="string('Account Title')"/>
      <xsl:variable name="v67" select="xdoxslt:convert_case(string($v66), string('NONE'))"/>
      <xsl:variable name="v68" select="xdoxslt:rpad(string($v67),number(13),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column1', substring($v68,1,13))"/>
   </xsl:template>
   <xsl:template name="space2">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),2,' ' -->
      <xsl:variable name="v69" select="xdoxslt:rpad(string(' '),number(2),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'space2', substring($v69,1,2))"/>
   </xsl:template>
   <xsl:template name="column3">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Account Status')),'NONE')),14,' ' -->
      <xsl:variable name="v70" select="string('Account Status')"/>
      <xsl:variable name="v71" select="xdoxslt:convert_case(string($v70), string('NONE'))"/>
      <xsl:variable name="v72" select="xdoxslt:rpad(string($v71),number(14),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column3', substring($v72,1,14))"/>
   </xsl:template>
   <xsl:template name="space3">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),2,' ' -->
      <xsl:variable name="v73" select="xdoxslt:rpad(string(' '),number(2),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'space3', substring($v73,1,2))"/>
   </xsl:template>
   <xsl:template name="column4">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Txn Code')),'NONE')),10,' ' -->
      <xsl:variable name="v74" select="string('Txn Code')"/>
      <xsl:variable name="v75" select="xdoxslt:convert_case(string($v74), string('NONE'))"/>
      <xsl:variable name="v76" select="xdoxslt:rpad(string($v75),number(10),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column4', substring($v76,1,10))"/>
   </xsl:template>
   <xsl:template name="space4">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),2,' ' -->
      <xsl:variable name="v77" select="xdoxslt:rpad(string(' '),number(2),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'space4', substring($v77,1,2))"/>
   </xsl:template>
   <xsl:template name="column5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Txn Ltrl')),'NONE')),30,' ' -->
      <xsl:variable name="v78" select="string('Txn Ltrl')"/>
      <xsl:variable name="v79" select="xdoxslt:convert_case(string($v78), string('NONE'))"/>
      <xsl:variable name="v80" select="xdoxslt:rpad(string($v79),number(30),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column5', substring($v80,1,30))"/>
   </xsl:template>
   <xsl:template name="space5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),2,' ' -->
      <xsl:variable name="v81" select="xdoxslt:rpad(string(' '),number(2),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'space5', substring($v81,1,2))"/>
   </xsl:template>
   <xsl:template name="column6">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Dr/Cr')),'NONE')),16,' ' -->
      <xsl:variable name="v82" select="string('Dr/Cr')"/>
      <xsl:variable name="v83" select="xdoxslt:convert_case(string($v82), string('NONE'))"/>
      <xsl:variable name="v84" select="xdoxslt:rpad(string($v83),number(16),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column6', substring($v84,1,16))"/>
   </xsl:template>
   <xsl:template name="space6">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v85" select="xdoxslt:rpad(string(' '),number(5),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'space6', substring($v85,1,5))"/>
   </xsl:template>
   <xsl:template name="column7">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Dr Sc Amount')),'NONE')),16,' ' -->
      <xsl:variable name="v86" select="string('Dr Sc Amount')"/>
      <xsl:variable name="v87" select="xdoxslt:convert_case(string($v86), string('NONE'))"/>
      <xsl:variable name="v88" select="xdoxslt:rpad(string($v87),number(16),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column7', substring($v88,1,16))"/>
   </xsl:template>
      <xsl:template name="space7">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v85a" select="xdoxslt:rpad(string(' '),number(5),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'space6', substring($v85a,1,5))"/>
   </xsl:template>
      <xsl:template name="column8">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Instrument No.')),'NONE')),14,' ' -->
      <xsl:variable name="v86a" select="string('Instrument No.')"/>
      <xsl:variable name="v87a" select="xdoxslt:convert_case(string($v86a), string('NONE'))"/>
      <xsl:variable name="v88a" select="xdoxslt:rpad(string($v87a),number(14),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column7', substring($v88a,1,14))"/>
   </xsl:template>
   <xsl:template name="L1R6P-2S0">
      <!--Error: Unknown error [ -->
   </xsl:template>

      <xsl:template name="column9">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Branch')),'NONE')),14,' ' -->
      <xsl:variable name="v1a" select="string('Branch')"/>
      <xsl:variable name="v2a" select="xdoxslt:convert_case(string($v1a), string('NONE'))"/>
      <xsl:variable name="v3a" select="xdoxslt:rpad(string($v2a),number(6),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column9', substring($v3a,1,6))"/>
   </xsl:template>

      <xsl:template name="column10">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Instrument No.')),'NONE')),14,' ' -->
      <xsl:variable name="v4a" select="string('-----TransactionBatchnNo.Number------------>')"/>
      <xsl:variable name="v5a" select="xdoxslt:convert_case(string($v4a), string('NONE'))"/>
      <xsl:variable name="v6a" select="xdoxslt:rpad(string($v5a),number(44),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'column10', substring($v6a,1,44))"/>
   </xsl:template>


   <xsl:template name="underline">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad(('_'),110,'_' -->
      <xsl:variable name="v89" select="xdoxslt:rpad(string('_'),number(110),string('_'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'underline', substring($v89,1,110))"/>
   </xsl:template>

   <xsl:template name="lbl_subhdr_ProdCode">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR(('Product Code   :')),'NONE')),12,' ' -->
      <xsl:variable name="v2c" select="string('Product Code   :')"/>
      <xsl:variable name="v3c" select="xdoxslt:convert_case(string($v2c), string('NONE'))"/>
      <xsl:variable name="v4c" select="xdoxslt:rpad(string($v3c),number(16),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'lbl_subhdr_ProdCode', substring($v4c,1,16))"/>
   </xsl:template>

   <xsl:template name="COD_PROD">
      <xsl:param name="index" select="string(position())"/>

      <xsl:variable name="v90c" select="number(xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//COD_PROD)))"/>
      <xsl:variable name="v91c" select="xdoxslt:lpad(string($v90c),number(6),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COD_PROD', substring($v91c,1,6))"/>
   </xsl:template>



   <xsl:template name="NAM_PRODUCT">
      <xsl:param name="index" select="string(position())"/>

      <xsl:variable name="v90d" select="string(xdoxslt:normalize_string($_XDOCTX, .//NAM_PRODUCT))"/>
      <xsl:variable name="v91d" select="xdoxslt:convert_case(string($v90d), string('NONE'))"/>
      <xsl:variable name="v92d" select="xdoxslt:rpad(string($v91d),number(30),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'NAM_PRODUCT', substring($v92d,1,30))"/>
   </xsl:template>


   <xsl:template name="COD_ACCT_NO">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: lpad((TO_NUMBER((COD_ACCT_NO))),16,'0' -->
      <xsl:variable name="v90" select="number(xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//COD_ACCT_NO)))"/>
      <xsl:variable name="v91" select="xdoxslt:lpad(string($v90),number(12),string('0'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COD_ACCT_NO', substring($v91,1,12))"/>
   </xsl:template>
   <xsl:template name="L1R8P17L5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v92" select="xdoxslt:rpad(string(' '),number(5),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8P17L5', substring($v92,1,5))"/>
   </xsl:template>
   <xsl:template name="COD_ACCT_TITLE">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR((STATUS)),'NONE')),7,' ' -->
      <xsl:variable name="v93" select="string(xdoxslt:normalize_string($_XDOCTX, .//COD_ACCT_TITLE))"/>
      <xsl:variable name="v94" select="xdoxslt:convert_case(string($v93), string('NONE'))"/>
      <xsl:variable name="v95" select="xdoxslt:rpad(string($v94),number(10),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COD_ACCT_TITLE', substring($v95,1,10))"/>
   </xsl:template>
   <xsl:template name="L1R8P29L5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v96" select="xdoxslt:rpad(string(' '),number(5),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8P29L5', substring($v96,1,5))"/>
   </xsl:template>
   <xsl:template name="COD_ACCT_STAT">
      <xsl:param name="index" select="string(position())"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'STAT', '')"/>
      <xsl:if test="number(xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//COD_ACCT_STAT))) = 7">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'STAT', 'Dormant A/C')"/>
      </xsl:if>
      <xsl:if test="number(xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//COD_ACCT_STAT))) = 8">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'STAT', 'Regular A/C')"/>
      </xsl:if>

      <xsl:if test="number(xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//COD_ACCT_STAT))) = 10">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'STAT', 'Blocked Dormant')"/>
      </xsl:if>

      <xsl:if test="number(xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//COD_ACCT_STAT))) = 11">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'STAT', 'No Dr Dormant')"/>
      </xsl:if>

      <xsl:if test="number(xdoxslt:to_number(xdoxslt:normalize_string($_XDOCTX, .//COD_ACCT_STAT))) = 12">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'STAT', 'No Cr Dormant')"/>
      </xsl:if>
 
      <xsl:variable name="v91z" select="xdoxslt:get_variable($_XDOCTX, 'STAT')"/>
      <xsl:variable name="v92z" select="xdoxslt:rpad(string($v91z),number(15),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COD_ACCT_STAT', substring($v92z,1,15))"/>

   </xsl:template>
   <xsl:template name="L1R8P38L5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v99" select="xdoxslt:rpad(string(' '),number(5),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8P38L5', substring($v99,1,5))"/>
   </xsl:template>
   <xsl:template name="COD_TXN_MNEMONIC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: lpad((FORMAT_NUMBER((COD_TXN_MNEMONIC), '###,###,###', '_DECIMALFORMAT')),5,'0' -->
      <xsl:variable name="v100" select="format-number(string(xdoxslt:normalize_string($_XDOCTX, .//COD_TXN_MNEMONIC)),string('###,###,###'),string('_DECIMALFORMAT'))"/>
      <xsl:variable name="v101" select="xdoxslt:lpad(string($v100),number(5),string('0'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COD_TXN_MNEMONIC', substring($v101,1,5))"/>
   </xsl:template>
   <xsl:template name="L1R8P47L5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v102" select="xdoxslt:rpad(string(' '),number(5),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8P47L5', substring($v102,1,5))"/>
   </xsl:template>
   <xsl:template name="TXT_TXN_DESC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR((TXT_TXN_DESC)),'NONE')),16,' ' -->
      <xsl:variable name="v103" select="string(xdoxslt:normalize_string($_XDOCTX, .//TXT_TXN_DESC))"/>
      <xsl:variable name="v104" select="xdoxslt:convert_case(string($v103), string('NONE'))"/>
      <xsl:variable name="v105" select="xdoxslt:rpad(string($v104),number(30),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'TXT_TXN_DESC', substring($v105,1,30))"/>
   </xsl:template>
   <xsl:template name="L1R8P68L5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v106" select="xdoxslt:rpad(string(' '),number(5),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8P68L5', substring($v106,1,5))"/>
   </xsl:template>
   <xsl:template name="COD_DRCR">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR((COD_DRCR)),'NONE')),16,' ' -->

       <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'CRDR', '')"/>
      <xsl:if test="string(xdoxslt:normalize_string($_XDOCTX, .//COD_DRCR)) = 'C'">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'CRDR', 'CR')"/>
      </xsl:if>
      <xsl:if test="string(xdoxslt:normalize_string($_XDOCTX, .//COD_DRCR)) = 'D'">
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'CRDR', 'DR')"/>
      </xsl:if>

      <xsl:variable name="v107" select="xdoxslt:get_variable($_XDOCTX, 'CRDR')"/>
      <xsl:variable name="v108" select="xdoxslt:convert_case(string($v107), string('NONE'))"/>
      <xsl:variable name="v109" select="xdoxslt:rpad(string($v108),number(2),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COD_DRCR', substring($v109,1,2))"/>
   </xsl:template>
   <xsl:template name="L1R8P89L5">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v110" select="xdoxslt:rpad(string(' '),number(25),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R8P89L5', substring($v110,1,25))"/>
   </xsl:template>
   <xsl:template name="AMT_SC">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: lpad((FORMAT_NUMBER((AMT_SC), '###,###,###', '_DECIMALFORMAT')),5,'2' -->
      <xsl:variable name="v100a" select="format-number(string(xdoxslt:normalize_string($_XDOCTX, .//AMT_SC)),string('###,###,###.00'),string('_DECIMALFORMAT'))"/>
      <xsl:variable name="v101a" select="xdoxslt:lpad(string($v100a),number(4),string('0'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'AMT_SC', substring($v101a,1,4))"/>
   </xsl:template>
   <xsl:template name="L1R9P1L110">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad(('_'),110,'_' -->
      <xsl:variable name="v113" select="xdoxslt:rpad(string('_'),number(110),string('_'))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R9P1L110', substring($v113,1,110))"/>
   </xsl:template>


   <xsl:template name="COD_CC_BRN_TXN">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR((STATUS)),'NONE')),7,' ' -->
      <xsl:variable name="v93b" select="string(xdoxslt:normalize_string($_XDOCTX, .//COD_CC_BRN_TXN))"/>
      <xsl:variable name="v94b" select="xdoxslt:convert_case(string($v93b), string('NONE'))"/>
      <xsl:variable name="v95b" select="xdoxslt:rpad(string($v94b),number(4),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'COD_CC_BRN_TXN', substring($v95b,1,4))"/>
   </xsl:template>

   <xsl:template name="space1b">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((' '),5,' ' -->
      <xsl:variable name="v110" select="xdoxslt:rpad(string(' '),number(15),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'space1b', substring($v110,1,15))"/>
   </xsl:template>

   <xsl:template name="CTR_BATCH_NO">
      <xsl:param name="index" select="string(position())"/>
      <!--Expression: rpad((CONVERT_CASE(TO_CHAR((STATUS)),'NONE')),7,' ' -->
      <xsl:variable name="v96b" select="string(xdoxslt:normalize_string($_XDOCTX, .//CTR_BATCH_NO))"/>
      <xsl:variable name="v97b" select="xdoxslt:convert_case(string($v96b), string('NONE'))"/>
      <xsl:variable name="v98b" select="xdoxslt:rpad(string($v97b),number(4),string(' '))"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'CTR_BATCH_NO', substring($v98b,1,4))"/>
   </xsl:template>



   <xsl:template name="_RECORDBREAK">
      <!--Record Brea -->
      <xsl:variable name="RECORDBREAK">
         <xsl:text>
</xsl:text>
      </xsl:variable>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'RECORD_BREAK_LENGTH',string-length($RECORDBREAK))"/>
      <xsl:value-of select="string($RECORDBREAK)"/>
      <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'LINE_NUMBER', number(1) + xdoxslt:get_variable($_XDOCTX, 'LINE_NUMBER'))"/>
   </xsl:template>
   <xsl:template name="_BLOCK_FILLER">
      <!--Block Fille -->
      <xsl:param name="BLOCK_BEGIN"/>
      <xsl:param name="BLOCK_END"/>
      <xsl:param name="BLOCK_SPAN"/>
      <xsl:param name="BLOCK_FILL_CHAR"/>
      <xsl:param name="BLOCK_RECORD_LENGTH"/>
      <xsl:param name="RECORD_BREAK_LENGTH"/>
      <xsl:param name="BLOCK_RECORD_COUNTER"/>
   </xsl:template>
   <xsl:template name="HEADER">
         <xsl:if test="xdoxslt:get_variable($_XDOCTX, 'PAGE_NUMBER') &gt; 0"><xsl:value-of select="xdoxslt:chr(12)"/></xsl:if>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'PAGE_NUMBER', number(1) + xdoxslt:get_variable($_XDOCTX, 'PAGE_NUMBER'))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'LINE_NUMBER', number(0))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1L',  number(0))"/>
         <!--Control: ===== START RECORD: CH101 ==== -->
         <!--Render: -->
         <xsl:call-template name="L1R1P1L110"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R1L', number(xdoxslt:get_variable($_XDOCTX, 'L1R1L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R1P1L110')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R1', xdoxslt:get_variable($_XDOCTX, 'L1R1P1L110'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R1')"/>
         <!--Control: ===== END RECORD: CH101 ==== -->
         <!--Control: ===== Record Break ==== -->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA_R02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'CH101_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L',  number(0))"/>
         <!--Control: ===== START RECORD: CH101 ==== -->
         <!--Render: -->
         <xsl:call-template name="lbl_hdr_bank"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(xdoxslt:get_variable($_XDOCTX, 'L1R2L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_bank')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_bank'))"/>
         <!--Render: -->
         <xsl:call-template name="data_hdr_bank"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(xdoxslt:get_variable($_XDOCTX, 'L1R2L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'data_hdr_bank')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'data_hdr_bank'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P15L6"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(xdoxslt:get_variable($_XDOCTX, 'L1R2L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R2P15L6')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P15L6'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P21L28"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(xdoxslt:get_variable($_XDOCTX, 'L1R2L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R2P21L28')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P21L28'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P49L5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(xdoxslt:get_variable($_XDOCTX, 'L1R2L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R2P49L5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P49L5'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P54L8"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(xdoxslt:get_variable($_XDOCTX, 'L1R2L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R2P54L8')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P54L8'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P62L20"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(xdoxslt:get_variable($_XDOCTX, 'L1R2L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R2P62L20')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P62L20'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P82L12"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(xdoxslt:get_variable($_XDOCTX, 'L1R2L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R2P82L12')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P82L12'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R2P94L11"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R2L', number(xdoxslt:get_variable($_XDOCTX, 'L1R2L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R2P94L11')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R2', xdoxslt:get_variable($_XDOCTX, 'L1R2P94L11'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R2')"/>
         <!--Control: ===== END RECORD: CH101 ==== -->
         <!--Control: ===== Record Break ==== -->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA_R02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'CH101_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L',  number(0))"/>
         <!--Control: ===== START RECORD: CH101 ==== -->
         <!--Render: -->
         <xsl:call-template name="lbl_hdr_branch"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(xdoxslt:get_variable($_XDOCTX, 'L1R3L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_branch')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_branch'))"/>
         <!--Render: -->
         <xsl:call-template name="data_hdr_branch"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(xdoxslt:get_variable($_XDOCTX, 'L1R3L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'data_hdr_branch')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'data_hdr_branch'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P17L5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(xdoxslt:get_variable($_XDOCTX, 'L1R3L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R3P17L5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P17L5'))"/>
         <!--Render: -->
         <xsl:call-template name="data_hdr_branchname"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(xdoxslt:get_variable($_XDOCTX, 'L1R3L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'data_hdr_branchname')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'data_hdr_branchname'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P42L8"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(xdoxslt:get_variable($_XDOCTX, 'L1R3L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R3P42L8')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P42L8'))"/>
         <!--Render: -->
         <xsl:call-template name="lbl_hdr_reporttitle"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(xdoxslt:get_variable($_XDOCTX, 'L1R3L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_reporttitle')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_reporttitle'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P73L11"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(xdoxslt:get_variable($_XDOCTX, 'L1R3L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R3P73L11')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P73L11'))"/>
         <!--Render: -->
         <xsl:call-template name="lbl_hdr_runtime"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(xdoxslt:get_variable($_XDOCTX, 'L1R3L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_runtime')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_runtime'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R3P94L11"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R3L', number(xdoxslt:get_variable($_XDOCTX, 'L1R3L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R3P94L11')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R3', xdoxslt:get_variable($_XDOCTX, 'L1R3P94L11'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R3')"/>
         <!--Control: ===== END RECORD: CH101 ==== -->
         <!--Control: ===== Record Break ==== -->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA_R02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'CH101_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4L',  number(0))"/>
         <!--Control: ===== START RECORD: CH101 ==== -->
         <!--Render: -->
         <xsl:call-template name="L1R4P1L8"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4L', number(xdoxslt:get_variable($_XDOCTX, 'L1R4L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R4P1L8')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R4', xdoxslt:get_variable($_XDOCTX, 'L1R4P1L8'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R4P9L20"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4L', number(xdoxslt:get_variable($_XDOCTX, 'L1R4L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R4P9L20')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R4', xdoxslt:get_variable($_XDOCTX, 'L1R4P9L20'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R4P29L23"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4L', number(xdoxslt:get_variable($_XDOCTX, 'L1R4L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R4P29L23')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R4', xdoxslt:get_variable($_XDOCTX, 'L1R4P29L23'))"/>
         <!--Render: -->
         <xsl:call-template name="lbl_hdr_reporttitle2"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4L', number(xdoxslt:get_variable($_XDOCTX, 'L1R4L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_reporttitle2')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R4', xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_reporttitle2'))"/>

         <xsl:call-template name="L1R4P69L15"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4L', number(xdoxslt:get_variable($_XDOCTX, 'L1R4L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R4P69L15')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R4', xdoxslt:get_variable($_XDOCTX, 'L1R4P69L15'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R4P84L12"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4L', number(xdoxslt:get_variable($_XDOCTX, 'L1R4L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R4P84L12')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R4', xdoxslt:get_variable($_XDOCTX, 'L1R4P84L12'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R4P96L8"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R4L', number(xdoxslt:get_variable($_XDOCTX, 'L1R4L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R4P96L8')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R4', xdoxslt:get_variable($_XDOCTX, 'L1R4P96L8'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R4')"/>
           <xsl:call-template name="_RECORDBREAK"/>
  	 <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'CH101_RC')"/>

	 <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5L',  number(0))"/>
         <xsl:call-template name="lbl_hdr_spaceLine5"/>
	 <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5L', number(xdoxslt:get_variable($_XDOCTX, 'L1R5L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_spaceLine5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R5', xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_spaceLine5'))"/>
         <xsl:call-template name="lbl_hdr_for"/>
	 <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5L', number(xdoxslt:get_variable($_XDOCTX, 'L1R5L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_for')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R5', xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_for'))"/>
	 <xsl:call-template name="lbl_hdr_spaceLine5b"/>
	 <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5L', number(xdoxslt:get_variable($_XDOCTX, 'L1R5L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_spaceLine5b')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R5', xdoxslt:get_variable($_XDOCTX, 'lbl_hdr_spaceLine5b'))"/>
         <xsl:call-template name="data_hdr_for"/>
	 <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5L', number(xdoxslt:get_variable($_XDOCTX, 'L1R5L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'data_hdr_for')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R5', xdoxslt:get_variable($_XDOCTX, 'data_hdr_for'))"/>

	 <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'CH101_RC')"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R5')"/>
         <xsl:call-template name="_RECORDBREAK"/>
   </xsl:template>
   <xsl:template name="SUB-HEADER">

         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5L',  number(0))"/>
         <!--Control: ===== START RECORD: G1 ==== -->
         <!--Render: -->
         <xsl:call-template name="L1R5P1L110"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R5L', number(xdoxslt:get_variable($_XDOCTX, 'L1R5L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R5P1L110')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R5', xdoxslt:get_variable($_XDOCTX, 'L1R5P1L110'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R5')"/>
         <!--Control: ===== END RECORD: G1 ==== -->
         <!--Control: ===== Record Break ==== -->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L',  number(0))"/>
         <!--Control: ===== START RECORD: G1 ==== -->
         <!--Render: -->
         <xsl:call-template name="column11"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column11')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'column11'))"/>
         <!--Render: -->
         <xsl:call-template name="space1"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'space1')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'space1'))"/>
         <!--Render: -->
         <xsl:call-template name="column1"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column1')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'column1'))"/>
         <!--Render: -->
         <xsl:call-template name="space2"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'space2')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'space2'))"/>
         <!--Render: -->
         <xsl:call-template name="column3"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column3')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'column3'))"/>
         <!--Render: -->
         <xsl:call-template name="space3"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'space3')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'space3'))"/>
         <!--Render: -->
         <xsl:call-template name="column4"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column4')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'column4'))"/>
         <!--Render: -->
         <xsl:call-template name="space4"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'space4')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'space4'))"/>
         <!--Render: -->
         <xsl:call-template name="column5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'column5'))"/>
         <!--Render: -->
         <xsl:call-template name="space5"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'space5')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'space5'))"/>
         <!--Render: -->
         <xsl:call-template name="column6"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column6')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'column6'))"/>
         <!--Render: -->
         <xsl:call-template name="space6"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'space6')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'space6'))"/>
         <!--Render: -->
         <xsl:call-template name="column7"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column7')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'column7'))"/>
         <!--Render: -->
         <xsl:call-template name="L1R6P-2S0"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'L1R6P-2S0')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'L1R6P-2S0'))"/>

         <xsl:call-template name="space7"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'space7')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'space7'))"/>

         <xsl:call-template name="column8"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column8')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'column8'))"/>
 
        <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R6')"/>
	
         <xsl:call-template name="_RECORDBREAK"/>
	 <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>
	
	 <xsl:call-template name="_RECORDBREAK"/>
	 <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>

	 <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7a',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7La',  number(0))"/>

         <xsl:call-template name="column9"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7La', number(xdoxslt:get_variable($_XDOCTX, 'L1R7La')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column9')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R7a', xdoxslt:get_variable($_XDOCTX, 'column9'))"/>
	
         <xsl:call-template name="column10"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7La', number(xdoxslt:get_variable($_XDOCTX, 'L1R7La')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column10')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R7a', xdoxslt:get_variable($_XDOCTX, 'column10'))"/>

         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R7a')"/>

         <!--Control: ===== END RECORD: G1 ==== -->
         <!--Control: ===== Record Break ==== -->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7L',  number(0))"/>
         <!--Control: ===== START RECORD: G1 ==== -->
         <!--Render: -->
         <xsl:call-template name="underline"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7L', number(xdoxslt:get_variable($_XDOCTX, 'L1R7L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'underline')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R7', xdoxslt:get_variable($_XDOCTX, 'underline'))"/>
         <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R7')"/>
         <!--Control: ===== END RECORD: G1 ==== -->
         <!--Control: ===== Record Break ==== -->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>

	 <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>
 

         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7d',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7Ld',  number(0))"/>

 	 <xsl:call-template name="lbl_subhdr_ProdCode"/>
	 <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7Ld', number(xdoxslt:get_variable($_XDOCTX, 'L1R7Ld')) + string-length(xdoxslt:get_variable($_XDOCTX, 'lbl_subhdr_ProdCode')))"/>
	 <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R7d', xdoxslt:get_variable($_XDOCTX, 'lbl_subhdr_ProdCode'))"/>

	 <xsl:call-template name="COD_PROD"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7Ld', number(xdoxslt:get_variable($_XDOCTX, 'L1R7Ld')) + string-length(xdoxslt:get_variable($_XDOCTX, 'COD_PROD')))"/>
	 <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R7d', xdoxslt:get_variable($_XDOCTX, 'COD_PROD'))"/>

	 <xsl:call-template name="NAM_PRODUCT"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7Ld', number(xdoxslt:get_variable($_XDOCTX, 'L1R7Ld')) + string-length(xdoxslt:get_variable($_XDOCTX, 'NAM_PRODUCT')))"/>
	 <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R7d', xdoxslt:get_variable($_XDOCTX, 'NAM_PRODUCT'))"/>

	 <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R7d')"/>
	
	
	
	 <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>

	 <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7c',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7Lc',  number(0))"/>
	  <xsl:call-template name="underline"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7Lc', number(xdoxslt:get_variable($_XDOCTX, 'L1R7Lc')) + string-length(xdoxslt:get_variable($_XDOCTX, 'underline')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R7c', xdoxslt:get_variable($_XDOCTX, 'underline'))"/>
	 <xsl:value-of select="xdoxslt:get_variable($_XDOCTX, 'L1R7c')"/>

         <!--Control: ===== Record Break ==== -->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>

   </xsl:template>
 
   <xsl:template name="GRP-FOOTER">

         <xsl:call-template name="space1"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'space1')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'space1'))"/>
         <!--Render: -->
         <!--Control: ===== END RECORD: G1 ==== -->
         <!--Control: ===== Record Break ==== -->
         <xsl:call-template name="_RECORDBREAK"/>
         <!--Control: Increase record counter: BA02 -->
         <xsl:value-of select="xdoxslt:next_sequence_number($_XDOCTX, 'G1_RC')"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7',  string(''))"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R7L',  number(0))"/>
         <!--Control: ===== START RECORD: G1 ==== -->
         <!--Render: -->
         <xsl:call-template name="column4"/>
         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'L1R6L', number(xdoxslt:get_variable($_XDOCTX, 'L1R6L')) + string-length(xdoxslt:get_variable($_XDOCTX, 'column4')))"/>
         <xsl:value-of select="xdoxslt:append_to($_XDOCTX, 'L1R6', xdoxslt:get_variable($_XDOCTX, 'column4'))"/>
         <xsl:value-of select="string('CR  Total                :')" />
	 <xsl:value-of select="sum(.//AMT_TXN)" />
	 <xsl:call-template name="_RECORDBREAK"/>
         <xsl:value-of select="string('DR  Total                :')" />
	 <xsl:value-of select="sum(.//AMT_TXN)" />
	 <xsl:call-template name="_RECORDBREAK"/>
         <xsl:value-of select="string('Net  Balance             :')" />
	 <xsl:value-of select="sum(.//AMT_TXN)" />
	 <xsl:call-template name="_RECORDBREAK"/>

         <xsl:value-of select="xdoxslt:set_variable($_XDOCTX, 'GRP_START',  string('TRUE'))"/>
 	
   </xsl:template>
</xsl:stylesheet>


