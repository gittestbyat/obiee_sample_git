<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
<xsl:output encoding='utf-8'/>
<xsl:template name="RMB">
<xsl:param name="value"/>
<xsl:choose>
   <xsl:when test="contains($value,'.')">
    <xsl:if test="translate(substring-before($value,'.'),'0','') != ''">
    <xsl:call-template name="TOUPPERCHSTR">
     <xsl:with-param name="value" select="substring-before($value,'.')"/>
    </xsl:call-template>
    <xsl:text>元</xsl:text>
    </xsl:if>
    <xsl:variable name="d" select="round(substring(substring-after(concat($value,'000'), '.'), 1, 3) div 10)"/>
    <xsl:variable name="d1" select="floor($d div 10)"/>
    <xsl:variable name="d2" select="$d mod 10"/>
    <xsl:if test="$d1&gt;0">
     <xsl:call-template name="UPPERCHAR">
      <xsl:with-param name="value" select="$d1"/>
     </xsl:call-template>
     <xsl:text>角</xsl:text>
    </xsl:if>
    <xsl:if test="$d2 &gt; 0">
     <xsl:call-template name="UPPERCHAR">
      <xsl:with-param name="value" select="$d2"/>
     </xsl:call-template>
     <xsl:text>分</xsl:text>
    </xsl:if>
<xsl:if test="not($d2) or $d2=0">整</xsl:if>

   </xsl:when>
   <xsl:otherwise>
    <xsl:call-template name="TOUPPERCHSTR">
     <xsl:with-param name="value" select="$value"/>
    </xsl:call-template>
    <xsl:text>元整</xsl:text>
   </xsl:otherwise>
</xsl:choose>
</xsl:template>
<!-- 
ÖÁÉÙ´¦Àí¿É 16 Î»ZhengÊý¶ø²»¶ªÊ§¾«¶È
-->
<!--×ª»»ÊýÖµÎª´óÐ´£¬´«ÈëµÄ²ÎÊý½«±»ËÄÉáÎåÈëÈ¡Zheng-->
<xsl:template name="TOUPPERCHSTR">
<xsl:param name="value"/>
<xsl:variable name="v" select="round($value)"/>
<xsl:choose>
   <xsl:when test="$v &lt; 0">
    <xsl:text>负</xsl:text>
    <xsl:call-template name="TOUPPERCHSTR">
     <xsl:with-param name="value" select="$v * -1"/>
    </xsl:call-template>
   </xsl:when>
   <xsl:when test="$v = 0">零</xsl:when>
   <xsl:when test="string-length($value) &gt; 8">
    <xsl:if test="translate(substring($value,1,string-length($value) - 8), '0','') != ''">
     <xsl:call-template name="TOUPPERCHSTR">
      <xsl:with-param name="value" select="substring($value,1,string-length($value) - 8)"/>
     </xsl:call-template>
     <xsl:text>亿</xsl:text>
    </xsl:if>
    <xsl:variable name="s" select="substring($value,string-length($value) - 7)"/>
    <xsl:if test="number($s) &gt; 0">
     <xsl:if test="translate(substring($value,1,string-length($value) - 8), '0','') != '' and substring($s,1,1) = '0'">零</xsl:if>
     <xsl:call-template name="TOUPPERCHSTR">
      <xsl:with-param name="value" select="$s"/>
     </xsl:call-template>
    </xsl:if>
   </xsl:when>
   <xsl:when test="string-length($v) &gt; 4">
    <xsl:call-template name="TOUPPERCHSTR">
     <xsl:with-param name="value" select="substring($v,1,string-length($v) -4)"/>
    </xsl:call-template>
    <xsl:text>万</xsl:text>
    <xsl:variable name="s" select="substring($v,string-length($v) - 3)"/>
    <xsl:if test="number($s) &gt; 0">
     <xsl:if test="substring($s,1,1) = '0'">零</xsl:if>
     <xsl:call-template name="TOUPPERCHSTR">
      <xsl:with-param name="value" select="$s"/>
     </xsl:call-template>
    </xsl:if>
   </xsl:when>
   <xsl:otherwise>
    <xsl:call-template name="UPPERCHAR">
     <xsl:with-param name="value" select="substring($v,1,1)"/>
    </xsl:call-template>
    <xsl:call-template name="getweightname">
     <xsl:with-param name="value" select="string-length($v)"/>
    </xsl:call-template>
    <xsl:variable name="v1" select="number(substring($v,2))"/>
    <xsl:if test="$v1 &gt;= 1">
     <xsl:if test="substring($v, 2, 1) = '0'">
      <xsl:choose>
       <xsl:when test="string-length($v) &gt; 5 and $v1 &lt; 10000">万</xsl:when>
       <xsl:otherwise>零</xsl:otherwise>
      </xsl:choose>
     </xsl:if>
     <xsl:call-template name="TOUPPERCHSTR">
      <xsl:with-param name="value" select="$v1"/>
     </xsl:call-template>
    </xsl:if>
   </xsl:otherwise>
</xsl:choose>
</xsl:template>
<!--½«ÊýÖµÖ±½Ó×ªÎª´óÐ´ÎÄ×Ö-->
<xsl:template name="UPPERCHAR">
<xsl:param name="value"/>
<xsl:value-of select="translate($value,'0123456789','零壹贰叁肆伍陆柒捌玖')"/>
</xsl:template>

<!--»ñµÃÎ»µÄÖÐÎÄÎ»È¨Ãû-->
<xsl:template name="getweightname">
<xsl:param name="value"/>
<xsl:choose>
   <xsl:when test="$value mod 4 = 2">拾</xsl:when>
   <xsl:when test="$value mod 4 = 3">佰</xsl:when>
   <xsl:when test="$value mod 4 = 0">千</xsl:when>
   <xsl:otherwise/>
</xsl:choose>
</xsl:template>
</xsl:stylesheet>